{"version":3,"file":"static/js/54.bce20ddc.chunk.js","mappings":"wJAIA,MAkCA,EAlCiBA,IAA8D,IAA7D,WAAEC,EAAU,QAAEC,EAAO,gBAAEC,EAAkB,GAAE,SAAEC,GAAUJ,EACrE,MAAMK,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBC,EAAAA,EAAAA,UAASP,IACtCQ,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,GAiBnD,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAYC,QANXC,KAChB,MAAMC,EAAcC,OAAOC,SAASC,SACpCd,EAAS,GAAGW,KAAef,IAAa,EAIQmB,SAAA,EAC5CR,EAAAA,EAAAA,MAAA,MAAAQ,SAAA,CAAI,QAAMnB,MACVoB,EAAAA,EAAAA,KAAA,OACIC,IAAKf,EACLgB,QApBQC,KAEZd,EAAgBP,EAAgBsB,QAChCjB,EAAcL,EAAgBO,IAC9BC,EAAiBD,EAAgB,IAEjCgB,QAAQC,MAAM,wCAClB,EAcQC,IAAK,mBAAmBxB,IACxBS,UAAU,qBAEdQ,EAAAA,EAAAA,KAAA,MAAAD,SAAKhB,MACH,EC6Cd,EA1EiByB,KACb,MAAOC,EAAOC,IAAYtB,EAAAA,EAAAA,UAAS,KAC5BuB,EAAWC,IAAgBxB,EAAAA,EAAAA,WAAS,IACrC,SAAEyB,IAAaC,EAAAA,EAAAA,MAErBC,EAAAA,EAAAA,YAAU,KAENnB,OAAOoB,SAAS,EAAG,GAEnBC,MAAM,yDAAyDJ,UAC1DK,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQX,EAASW,KACtBC,OAAMhB,GAASD,QAAQC,MAAM,mDAA8CA,IAAO,GACxF,CAACO,IAgBJ,OACItB,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAxB,SAAA,EAEIC,EAAAA,EAAAA,KAAA,MAAIR,UAAU,UAASO,SAAC,uBAExBC,EAAAA,EAAAA,KAAA,OAAKR,UAAU,cAAaO,UACxBC,EAAAA,EAAAA,KAAA,UAAQP,QAASA,IAAMmB,GAAcD,GAAWZ,UAC5CC,EAAAA,EAAAA,KAAA,KAAGR,UAAW,0BAA0BmB,EAAwB,GAAZ,kBAQ5DX,EAAAA,EAAAA,KAAA,OAAKR,UAAU,gBAAeO,SA5BnB,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,OAgC9DyB,KAAIC,IACZlC,EAAAA,EAAAA,MAACmC,EAAAA,GAAI,CAEDC,GAAI,UAAUF,IACdjC,UAAWqB,IAAaY,EAAQ,SAAW,GAAG1B,SAAA,CACjD,QACS0B,EAAM,MAJPA,QASjBzB,EAAAA,EAAAA,KAAA,OAAKR,UAAU,YAAWO,SAjCvB,IAAIU,GAAOmB,MAAK,CAACC,EAAGC,IAAMnB,EAAYkB,EAAEE,KAAOD,EAAEC,KAAOD,EAAEC,KAAOF,EAAEE,OAkCrDP,KAAIO,IACb/B,SAAAA,EAAAA,KAACgC,EAAQ,CAELpD,WAAYmD,EAAKA,KACjBlD,QAAS,wDAAwDgC,KAAYkB,EAAKA,YAClFE,gBA9CUC,EA8C2B,wDAAwDrB,UA9C1EjC,EA8C4FmD,EAAKA,KA7CpH,CAAC,OAAQ,MAAO,OACjBP,KAAIW,GAAU,GAAGD,KAAWtD,KAAcuD,OA6CzCpD,SAAUgD,EAAKK,MAJVL,EAAKA,MA3CDM,IAACH,EAAStD,CAiD1B,QAEN,C","sources":["components/TomeCard/TomeCard.jsx","pages/TomesHome/TomeHome.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TomeCard.css';\r\n\r\nconst TomeCard = ({ tomeNumber, imgTome, fallbackSources = [], tomeName }) => {\r\n    const navigate = useNavigate();\r\n    const [currentSrc, setCurrentSrc] = useState(imgTome);\r\n    const [fallbackIndex, setFallbackIndex] = useState(0);\r\n\r\n    const handleError = () => {\r\n        // Si une image échoue, on passe à la source suivante dans le tableau fallbackSources\r\n        if (fallbackIndex < fallbackSources.length) {\r\n            setCurrentSrc(fallbackSources[fallbackIndex]);\r\n            setFallbackIndex(fallbackIndex + 1);\r\n        } else {\r\n            console.error('Aucune image disponible pour ce tome.');\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        const currentPath = window.location.pathname;\r\n        navigate(`${currentPath}/${tomeNumber}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tome-card\" onClick={handleClick}>\r\n            <h3>TOME {tomeNumber}</h3>\r\n            <img \r\n                src={currentSrc} \r\n                onError={handleError} \r\n                alt={`Illustration of ${tomeName}`} \r\n                className=\"tome-card-image\" \r\n            />\r\n            <h4>{tomeName}</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TomeCard;\r\n","import './TomeHome.css';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport TomeCard from '../../components/TomeCard/TomeCard';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst TomeHome = () => {\r\n    const [tomes, setTomes] = useState([]);\r\n    const [ascending, setAscending] = useState(true); // État pour l'ordre de tri\r\n    const { tomelist } = useParams();\r\n\r\n    useEffect(() => {\r\n        // Scroll to top when tomelist changes\r\n        window.scrollTo(0, 0);\r\n        \r\n        fetch(`https://kpiece2.s3.eu-west-3.amazonaws.com/data/tomes/${tomelist}.json`)\r\n            .then(response => response.json())\r\n            .then(data => setTomes(data))\r\n            .catch(error => console.error('Erreur lors de la récupération des tomes :', error));\r\n    }, [tomelist]);\r\n    \r\n\r\n    const tomeRanges = ['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100', '110'];\r\n\r\n    // Fonction pour essayer différents formats d'image\r\n    const getImageWithFallback = (baseUrl, tomeNumber) => {\r\n        const formats = ['webp', 'jpg', 'png'];\r\n        return formats.map(format => `${baseUrl}/${tomeNumber}.${format}`);\r\n    };\r\n\r\n    // Fonction pour trier les tomes\r\n    const sortTomes = () => {\r\n        return [...tomes].sort((a, b) => ascending ? a.tome - b.tome : b.tome - a.tome);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2 className='tome-h2'> Liste des tomes </h2>\r\n\r\n            <div className=\"sort-button\">\r\n                <button onClick={() => setAscending(!ascending)}>\r\n                    <i className={`fa-solid fa-angles-up ${!ascending ? 'rotated' : ''}`}></i>\r\n                </button>\r\n            </div>\r\n\r\n           \r\n\r\n\r\n\r\n            <div className=\"tome-selector\">\r\n\r\n\r\n\r\n                {tomeRanges.map(range => (\r\n                    <Link\r\n                        key={range}\r\n                        to={`/tomes/${range}`}\r\n                        className={tomelist === range ? \"active\" : \"\"}\r\n                    >\r\n                        TOME {range}+\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"tome-home\">\r\n                {sortTomes().map(tome => (\r\n                    <TomeCard\r\n                        key={tome.tome}\r\n                        tomeNumber={tome.tome}\r\n                        imgTome={`https://kpiece2.s3.eu-west-3.amazonaws.com/img/tomes/${tomelist}/${tome.tome}.webp`}\r\n                        fallbackImages={getImageWithFallback(`https://kpiece2.s3.eu-west-3.amazonaws.com/img/tomes/${tomelist}/Image`, tome.tome)}\r\n                        tomeName={tome.name}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TomeHome;\r\n"],"names":["_ref","tomeNumber","imgTome","fallbackSources","tomeName","navigate","useNavigate","currentSrc","setCurrentSrc","useState","fallbackIndex","setFallbackIndex","_jsxs","className","onClick","handleClick","currentPath","window","location","pathname","children","_jsx","src","onError","handleError","length","console","error","alt","TomeHome","tomes","setTomes","ascending","setAscending","tomelist","useParams","useEffect","scrollTo","fetch","then","response","json","data","catch","_Fragment","map","range","Link","to","sort","a","b","tome","TomeCard","fallbackImages","baseUrl","format","name","getImageWithFallback"],"sourceRoot":""}